using Newtonsoft.Json;

namespace Moon_Light_Music.Models;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Welcome.FromJson(jsonString);



// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var trackModel = TrackModel.FromJson(jsonString);

public partial class TrackModel
{
    [JsonProperty("albums")]
    public Albums? Albums
    {
        get; set;
    }
}

//public partial class Albums
//{
//    [JsonProperty("href")]
//    public Uri? Href
//    {
//        get; set;
//    }

//    [JsonProperty("items")]
//    public Item[]? Items
//    {
//        get; set;
//    }

//    [JsonProperty("limit")]
//    public long Limit
//    {
//        get; set;
//    }

//    [JsonProperty("next")]
//    public Uri? Next
//    {
//        get; set;
//    }

//    [JsonProperty("offset")]
//    public long Offset
//    {
//        get; set;
//    }

//    [JsonProperty("previous")]
//    public Uri? Previous
//    {
//        get; set;
//    }

//    [JsonProperty("total")]
//    public long Total
//    {
//        get; set;
//    }
//}

//public partial class Item
//{
//    [JsonProperty("album_type")]
//    public string? AlbumType
//    {
//        get; set;
//    }

//    [JsonProperty("artists")]
//    public Artist[]? Artists
//    {
//        get; set;
//    }

//    [JsonProperty("available_markets")]
//    public string[]? AvailableMarkets
//    {
//        get; set;
//    }

//    [JsonProperty("external_urls")]
//    public ExternalUrls? ExternalUrls
//    {
//        get; set;
//    }

//    [JsonProperty("href")]
//    public Uri? Href
//    {
//        get; set;
//    }

//    [JsonProperty("id")]
//    public string? Id
//    {
//        get; set;
//    }



//    [JsonProperty("name")]
//    public string? Name
//    {
//        get; set;
//    }



//    [JsonProperty("type")]
//    public string? Type
//    {
//        get; set;
//    }

//    [JsonProperty("uri")]
//    public string? Uri
//    {
//        get; set;
//    }
//}

//public partial class Artist
//{
//    [JsonProperty("external_urls")]
//    public ExternalUrls? ExternalUrls
//    {
//        get; set;
//    }

//    [JsonProperty("href")]
//    public Uri? Href
//    {
//        get; set;
//    }

//    [JsonProperty("id")]
//    public string? Id
//    {
//        get; set;
//    }

//    [JsonProperty("name")]
//    public string? Name
//    {
//        get; set;
//    }

//    [JsonProperty("type")]
//    public string? Type
//    {
//        get; set;
//    }

//    [JsonProperty("uri")]
//    public string? Uri
//    {
//        get; set;
//    }
//}

//public partial class ExternalUrls
//{
//    [JsonProperty("spotify")]
//    public Uri? Spotify
//    {
//        get; set;
//    }
//}



public partial class TrackModel
{
    public static TrackModel FromJson(string json) => JsonConvert.DeserializeObject<TrackModel>(json, Models.Converter.Settings)!;
}

//public static class Serialize
//{
//    public static string ToJson(this TrackModel self) => JsonConvert.SerializeObject(self, Models.Converter.Settings);
//}

//internal static class Converter
//{
//    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
//    {
//        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
//        DateParseHandling = DateParseHandling.None,
//        Converters =
//        {
//            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
//        },
//    };
//}




